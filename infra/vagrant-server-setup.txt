# CentOS release 6.6 (64) (Vagrant box: puppetlabs/centos-6.6-64-puppet)

# Sets Permissions
sudo groupadd places-dev
sudo usermod -a -G places-dev vagrant
sudo usermod -a -G places-dev nobody

# Updates YUM
sudo rpm -Uvh http://yum.postgresql.org/9.4/redhat/rhel-6-x86_64/pgdg-centos94-9.4-1.noarch.rpm
sudo yum -y update

# Installs NGINX, Git, Postgresql and other requirements
sudo yum -y install epel-release nginx git postgresql94 postgresql94-server postgresql94-contrib postgresql94-devel postgresql-devel gettext sudo yum install gcc make

# Installs PHP requirements
sudo rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm
sudo yum -y remove php-common       # Need to remove this, otherwise it conflicts
sudo yum -y install php56w php56w-mysql php56w-pgsql php56w-common php56w-pdo php56w-opcache php56w-devel php56w-fpm

# Creates folder structures
sudo mkdir -p /places
sudo chown -R vagrant:places-dev /places
sudo chgrp -R places-dev /places

# IF NOT IN LOCAL: Clones Project Source Code from GIT
cd /
sudo git clone https://github.com/humbertomn/places.git
shopt -s dotglob
sudo git checkout master
sudo rm -R temp
sudo rm -R infra
sudo chown -R vagrant:places-dev /places


# Configures database
sudo chkconfig postgresql-9.4 on
sudo service postgresql-9.4 initdb
sudo service postgresql-9.4 start
sudo su - postgres
psql
CREATE DATABASE places;
CREATE USER places WITH PASSWORD '98jHaueja&62hsk#afh8Uhsk';
ALTER ROLE places SET client_encoding TO 'utf8';
ALTER ROLE places SET default_transaction_isolation TO 'read committed';
ALTER ROLE places SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE places TO places;
ALTER USER postgres WITH PASSWORD 'Ujs82Z81kIeB27Haaao82jdI90O3uGaY';
\q
exit
sudo vi /var/lib/pgsql/9.4/data/pg_hba.conf
# Change values ‘ident’ and ‘peer’ to ‘md5’
# Optional to run pgadmin on localhost (http://www.bentedder.com/use-pgadmin-access-postgres-database-within-vagrant-box/)
sudo service postgresql-9.4 restart
PATH=$PATH:/usr/pgsql-9.4/bin/

# Installs Phalcon
sudo su
cd /tmp
sudo git clone --depth=1 git://github.com/phalcon/cphalcon.git
cd cphalcon/build
sudo ./install
sudo vi /etc/php.d/phalcon.ini
# Add “extension=phalcon.so”
sudo vi /etc/php-fpm.d/www.conf
# Next, find the lines that set the listen.owner and listen.group and uncomment them. They should look like this:
# “listen.owner = nobody”
# “listen.group = nobody”
# “listen.mode = 0660”
# Lastly, find the lines that set the user and group and change their values from "apache" to "nginx"

# Installs Phalcon Developer Tools
sudo su
cd /tmp
git clone git://github.com/phalcon/phalcon-devtools.git
cd phalcon-devtools
. ./phalcon.sh
ln -s ~/phalcon-devtools/phalcon.php /usr/bin/phalcon
chmod ugo+x /usr/bin/phalcon

# Installs Composer
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Restart PHP-FPM
sudo service php-fpm restart
sudo chkconfig php-fpm on

# Fixes firewall/iptables
sudo vi /etc/sysconfig/iptables
# Add in the top of all other options “-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT”
# Add in the top of all other options (below the above one) “-A INPUT -p tcp -m tcp --dport 443 -j ACCEPT”
# Add in the top of all other options (below the above one) “-I INPUT -p tcp --dport 5432 -j ACCEPT”
sudo service iptables restart

# Configures Nginx
sudo vi /etc/nginx/conf.d/default.conf
# Add the code below:
server {
    listen 80;
    server_name localhost;
    root /places/src/public;
    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ /index.php?_url=$uri&$args;
    }

    location ~ \.php {
        fastcgi_pass  unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_index /index.php;

        include fastcgi_params;
        fastcgi_split_path_info       ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }
}
sudo vi /etc/nginx/fastcgi_params
# Add the code below:
fastcgi_param  QUERY_STRING       $query_string;
fastcgi_param  REQUEST_METHOD     $request_method;
fastcgi_param  CONTENT_TYPE       $content_type;
fastcgi_param  CONTENT_LENGTH     $content_length;

fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
fastcgi_param  REQUEST_URI        $request_uri;
fastcgi_param  DOCUMENT_URI       $document_uri;
fastcgi_param  DOCUMENT_ROOT      $document_root;
fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
fastcgi_param  SERVER_PROTOCOL    $server_protocol;
fastcgi_param  PATH_INFO          $fastcgi_script_name;

fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

fastcgi_param  REMOTE_ADDR        $remote_addr;
fastcgi_param  REMOTE_PORT        $remote_port;
fastcgi_param  SERVER_ADDR        $server_addr;
fastcgi_param  SERVER_PORT        $server_port;
fastcgi_param  SERVER_NAME        $server_name;

# PHP only, required if PHP was built with --enable-force-cgi-redirect
fastcgi_param  REDIRECT_STATUS    200;

# Updates permissions
sudo usermod -a -G places-dev nginx
sudo chown -R vagrant:places-dev /places
sudo chgrp -R places-dev /places

# Restarts Nginx
sudo chkconfig nginx on
sudo service nginx restart
sudo service php-fpm restart

# Logs
sudo tail /var/log/nginx/access.log
sudo tail /var/log/nginx/error.log
sudo tail /var/log/php-fpm/error.log

# configure telnet
http://www.unixmen.com/installing-telnet-centosrhelscientific-linux-6-7/
http://stackoverflow.com/questions/5802189/django-errno-111-connection-refused



